1) This program contains 3 main elements. The first is the web scraper contained in athletic.netScraper.py file. The second element is the useData.py file, which contains the main and the code to analyze my data. The third element is my interface, which allows the user to run the code that analyzes my data.
2) There are several classes in my useData module: Athlete, Graph, and Projection, as well as a collectTimes method and the main(). The Athlete class helps organize my data and makes it easier to use in the rest of the program. the Graph class takes in my lists of data and opens a matplotlib window to graph them. The Projection class contains the methods to find a reasonable projected time given a parameter. The collectTimes method gets data from my times.csv file and returns a list of Athletes from that data. My interface module interacts with the user by text and runs methods of the Graph and Projection classes.
3) I have one bug in my program that I couldn't quite figure out how to fix. Once the graph is graphed, my program doesn't end when the graph window is closed. It's quite annoying.
4) Navigate to the correct folder and run the command: python3 useData.py. By responding to the prompts, you'll be able to choose to graph or make a projection. If you make a projection, reasonable 3200 times would range between 9:15 and 12:00. If you would like to run the web scraper to see how it works, follow the directions at the top of the athletic.netScraper.py file to enter an environment to install the correct packages. Running the web scraper isn't neccessary, as the times.csv file contains the data scraped by that module.